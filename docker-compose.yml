version: '3.8'

services:
  # 1. NestJS Backend Service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: restaurant-server
    restart: unless-stopped
    ports:
      # Map container port 3001 ONLY to host localhost port 3001
      - "127.0.0.1:3001:3001"
    environment:
      # Variables are loaded from the root .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      # Use internal service names within the Docker network
      - REDIS_URL=redis://redis:6379
      - OCR_SERVICE_URL=http://ocr:8000
    depends_on:
      - redis
      - ocr
    networks:
      - app-network

  # 2. Python OCR/PDF Service
  ocr:
    build:
      context: ./ocr-service
      dockerfile: Dockerfile
    container_name: restaurant-ocr
    restart: unless-stopped
    ports:
      # Map container port 8000 ONLY to host localhost port 8000
      - "127.0.0.1:8000:8000"
    networks:
      - app-network

  # 3. React Frontend Service (served by Nginx)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: restaurant-client
    restart: unless-stopped
    ports:
      # Map container port 80 ONLY to host localhost port 8080
      - "127.0.0.1:8080:80"
    networks:
      - app-network

  # 4. Redis Service
  redis:
    image: redis:latest
    container_name: restaurant-redis
    restart: unless-stopped
    ports:
      # Map port 6379 ONLY to host localhost port 6379
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

# Define the volume for persistent Redis data
volumes:
  redis-data:

# Define a custom network for services to communicate
networks:
  app-network:
    driver: bridge