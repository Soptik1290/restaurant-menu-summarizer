name: CI - Run Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # Úloha pro testování backendu
  test-backend:
    name: Run Backend Unit & E2E Tests
    runs-on: ubuntu-latest

    # --- PŘIDÁNO: Spusť Redis službu ---
    # Toto spustí Docker kontejner s Redisem souběžně s tvým jobem
    services:
      redis:
        image: redis:latest # Použij oficiální Redis image
        ports:
          - 6379:6379 # Zmapuj port 6379 v kontejneru na port 6379 v "host" (runneru)
        options: >- # Počkej, až bude Redis připravený
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install server dependencies
        run: npm install --prefix server

      - name: Run server unit tests
        run: npm test --prefix server
        env:
          # Nastav proměnné prostředí pro testy
          # GitHub Actions mapuje port služby na localhost runneru
          REDIS_URL: redis://localhost:6379
          # I když jsou OpenAI a OCR mockované v E2E, je dobré mít proměnné nastavené
          OPENAI_API_KEY: ${{ secrets.DUMMY_KEY }} # Použij dummy klíč, testy ho stejně nemají volat
          OCR_SERVICE_URL: http://localhost:8000

      - name: Run server E2E tests
        run: npm run test:e2e --prefix server
        env:
          # Stejné proměnné i pro E2E testy
          REDIS_URL: redis://localhost:6379
          OPENAI_API_KEY: ${{ secrets.DUMMY_KEY }}
          OCR_SERVICE_URL: http://localhost:8000

  # Úloha pro testování frontendu
  test-frontend-build:
    name: Test Frontend Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install client dependencies
        run: npm install --prefix client

      - name: Build client
        run: npm run build --prefix client
        env:
          # Nastav proměnnou pro build
          REACT_APP_API_URL: /api
          # --- PŘIDÁNO: Zabraň varováním, aby shodila build ---
          CI: false
